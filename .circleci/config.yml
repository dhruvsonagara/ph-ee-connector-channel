version: 2.1
orbs:
  slack: circleci/slack@4.12.5
  aws-ecr: circleci/aws-ecr@8.2.1
  helm: circleci/helm@2.0.1
  kubernetes: circleci/kubernetes@1.3
jobs:
  build:
    docker:
      - image: cimg/openjdk:17.0.0
      - image: docker:17.05.0-ce-git
    working_directory: ~/repo
    environment:
      # Customize the JVM maximum heap limit
      JVM_OPTS: -Xmx512m
      TERM: dumb
    steps:
      - checkout
      - setup_remote_docker
#       - slack/notify:
#           event: fail
#           mentions: '@here'
#           template: basic_fail_1
#       - slack/notify:
#           event: pass
#           template: basic_success_1
      - run: ./gradlew clean bootJar
      - aws-ecr/build-and-push-image:
          aws-access-key-id: AWS_ACCESS_KEY_ID
          aws-secret-access-key: AWS_SECRET_ACCESS_KEY
          extra-build-args: '--compress'
          push-image: true
          region: "$REGION"
          registry-id: AWS_REGISTRY_ID
          repo: phee-channel
          repo-scan-on-push: true
          role-arn: arn:aws:iam::419830066942:role/CustomAdmin
          tag: latest
      # - run: ./gradlew cucumberCli
      # run tests! Slack Success/Fail Notification Step
      #- run: ./gradlew test
  build-and-host-ph-ee-engine:
    docker:
      - image: cimg/python:3.10
    working_directory: ~/repo
    environment:
      TERM: dumb
    steps:
      - run: git clone https://github.com/openMF/ph-ee-env-template
      - run: rm -f helm/ph-ee-engine/Chart.lock helm/ph-ee-engine/requirements.lock helm/ph-ee-engine/charts/*
      - helm/install-helm-client:
          version: "v3.8.2"
      - run: "sed -i '2s/.*/appVersion: 0.0.0/' helm/ph-ee-engine/Chart.yaml"
      - run: "sed -i '5s/.*/version: 0.0.0-SNAPSHOT/' helm/ph-ee-engine/Chart.yaml"
      - run: helm dep up helm/ph-ee-engine
      - run: helm package helm/ph-ee-engine
      - run: helm repo index .
      - run: echo "$CERT_FILE" | base64 --decode > b64encoded.pem
      - run: chmod 400 b64encoded.pem
      - run: scp -o StrictHostKeyChecking=No -i b64encoded.pem index.yaml ph-ee-engine-0.0.0-SNAPSHOT.tgz ec2-user@13.233.68.128:~/
      - run: ssh -i b64encoded.pem -o StrictHostKeyChecking=No ec2-user@13.233.68.128 sudo cp -t /apps/apache-tomcat-7.0.82/webapps/ROOT/images/ph-ee-engine-0.0.0-SNAPSHOT index.yaml ph-ee-engine-0.0.0-SNAPSHOT.tgz
  build-and-host-g2p-sandbox:
    docker:
      - image: cimg/python:3.10
    working_directory: ~/repo
    environment:
      TERM: dumb
    steps:
      - run: git clone https://github.com/openMF/ph-ee-env-template
      - run: rm -f helm/g2p-sandbox/Chart.lock helm/g2p-sandbox/requirements.lock helm/g2p-sandbox/charts/*
      - helm/install-helm-client:
          version: "v3.8.2"
      - run: "sed -i '6s/.*/appVersion: 0.0.0/' helm/g2p-sandbox/Chart.yaml"
      - run: "sed -i '7s/.*/version: 0.0.0/' helm/g2p-sandbox/Chart.yaml"
      # - run: "sed -i '4s/.*/version: 0.0.0-SNAPSHOT/' helm/g2p-sandbox/requirements.yaml"
      # SED & replace dependency with 0.0.0
      - run: helm dep up helm/g2p-sandbox
      - run: helm package helm/g2p-sandbox
      - run: helm repo index .
      - run: echo "$CERT_FILE" | base64 --decode > b64encoded.pem
      - run: chmod 400 b64encoded.pem
      - run: scp -o StrictHostKeyChecking=No -i b64encoded.pem index.yaml ph-ee-g2psandbox-0.0.0.tgz ec2-user@13.233.68.128:~/
      - run: ssh -i b64encoded.pem -o StrictHostKeyChecking=No ec2-user@13.233.68.128 sudo cp -t /apps/apache-tomcat-7.0.82/webapps/ROOT/images/ph-ee-g2psandbox-0.0.0 index.yaml ph-ee-g2psandbox-0.0.0.tgz
  upgrade-helm-chart:
    docker:
      - image: cimg/python:3.10
    parameters:
      cluster-name:
        description: "sit"
        type: string
    steps:
      - aws-eks/update-kubeconfig-with-authenticator:
          cluster-name: "sit"
          aws-region: "$REGION"
      - helm/install-helm-client:
          version: "v3.8.2"
      - run: helm ls --namespace=paymenthub
      - helm/upgrade-helm-chart:
          chart: "https://fynarfin.io/images/ph-ee-g2psandbox-fynarfin/ph-ee-g2psandbox-fynarfin-0.2.0.tgz"
          release-name: g2p-sandbox
          namespace: paymenthub
          recreate-pods: true
          add-repo: "https://fynarfin.io/images/ph-ee-g2psandbox-fynarfin"
          wait: true
          timeout: "300s"
workflows:
  build_push_deploy:
    jobs:
      - build:
          context:
            - AWS
            - Helm
            - slack
      - build-and-host-ph-ee-engine:
          requires:
            - build
          context:
            - AWS
            - Helm
            - slack
      - build-and-host-g2p-sandbox:
          requires:
            - build-and-host-ph-ee-engine
          context:
            - AWS
            - Helm
            - slack
      - upgrade-helm-chart:
          cluster-name: sit
          requires:
            - build-and-host-g2p-sandbox
          context:
            - AWS
            - Helm
            - slack
